version: "3.3"
services:

  postgres:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - "./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql"
    ports:
      - 127.0.0.1:5432:5432

  biencoder:
    image: rpozzi/ikbp_biencoder
    build:
      context: ./biencoder
      dockerfile: Dockerfile
    volumes:
      - ./models:/home/app/models
    ports:
      - 127.0.0.1:30300:80
    environment:
      - PYTHONPATH=/home/app
    ########### GPU start ###########
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [ gpu ]
    ########### GPU end #############
    command: python main.py --host 0.0.0.0 --port 80 --biencoder_model models/biencoder_wiki_large.bin --biencoder_config models/biencoder_wiki_large.json

  indexer:
    image: rpozzi/ikbp_indexer
    build:
        context: ./indexer
        dockerfile: Dockerfile
    volumes:
      - ./models:/home/app/models
    ports:
      - 127.0.0.1:30301:80
    command: python main.py --host 0.0.0.0 --port 80 --index hnsw:models/faiss_hnsw_index.pkl:10:r,flat:models/faiss_flat_kbp_index.pkl:20:rw --postgres 'postgres://postgres:$POSTGRES_PASSWORD@postgres:5432/postgres' --vector-size 1024 --language en

  nilpredictor:
    image: rpozzi/ikbp_nilpredictor
    build:
        context: ./nilpredictor
        dockerfile: Dockerfile
    volumes:
      - ./models:/home/app/models
    ports:
      - 127.0.0.1:30303:80
    command: python __main__.py --host 0.0.0.0 --port 80 --nil-bi-model models/nilp_bi_max_secondiff_model.pickle --nil-bi-features 'max_bi,secondiff'

##### the clustering methods listen on the same port --> only one up

  threestepclustering:
    image: rpozzi/ikbp_threestepclustering
    build:
        context: ./threestepclustering
        dockerfile: Dockerfile
    volumes:
      - ./models:/home/app/models
    ports:
      - 127.0.0.1:30305:80
    environment:
      - PYTHONPATH=/path/to/EntityClustering
    command: python __main__.py --host 0.0.0.0 --port 80

  greedyclustering:
    image: rpozzi/ikbp_greedyclustering
    build:
        context: ./greedyclustering
        dockerfile: Dockerfile
    volumes:
      - ./models:/home/app/models
    ports:
      - 127.0.0.1:30305:80
    command: python __main__.py --host 0.0.0.0 --port 80

  featureclustering:
    image: rpozzi/ikbp_featureclustering
    build:
        context: ./featureclustering
        dockerfile: Dockerfile
    volumes:
      - ./models:/home/app/models
    ports:
      - 127.0.0.1:30305:80
    command: python __main__.py --host 0.0.0.0 --port 80
